<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>Assign_Count_of_Open_Non_Received_Product_Requests_on_Case</name>
        <label>Assign Count of Open, Non-Received Product Requests on Case</label>
        <locationX>182</locationX>
        <locationY>528</locationY>
        <assignmentItems>
            <assignToReference>varOpenProductRequests</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Get_Open_Parts_On_Order_Product_Requests_on_Case</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Should_Chatter_Message_Go_Out</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Product_Consumed_Lookup_Field</name>
        <label>Assign Product Consumed Lookup Field</label>
        <locationX>842</locationX>
        <locationY>648</locationY>
        <assignmentItems>
            <assignToReference>$Record.Product_Consumed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Associated_Product_Consumed_Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Product_Consumed_Defined__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Product_Consumed_Record</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Does_Product_Request_have_a_Type_of_Parts_Consumed_Backfill</name>
        <label>Does Product Request have a Type of &quot;Parts Consumed Backfill&quot;</label>
        <locationX>1172</locationX>
        <locationY>288</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_PartsConsumedBackfill</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Parts Consumed Backfill</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Associated_Product_Consumed_Record</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Associated_Product_Consumed_Record_Found</name>
        <label>Is Associated Product Consumed Record Found?</label>
        <locationX>974</locationX>
        <locationY>528</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_ProductConsumedRecordFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Associated_Product_Consumed_Record</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Product_Consumed_Lookup_Field</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Product_Request_Type</name>
        <label>Product Request Type?</label>
        <locationX>380</locationX>
        <locationY>288</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Product_Request_Parts_on_Order</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Parts on Order</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Received</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Received</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Open_Parts_On_Order_Product_Requests_on_Case</targetReference>
            </connector>
            <label>Product Request = Parts on Order</label>
        </rules>
    </decisions>
    <decisions>
        <name>Should_Chatter_Message_Go_Out</name>
        <label>Should Chatter Message Go Out?</label>
        <locationX>182</locationX>
        <locationY>648</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varOpenProductRequests</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Case.Parts_On_Order_Chatter_Sent__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Populate_Checkbox_on_Case</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Product Request - After Create/Update {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Product Request - After Create/Update</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Associated_Product_Consumed_Record</name>
        <label>Get Associated Product Consumed Record</label>
        <locationX>974</locationX>
        <locationY>408</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Associated_Product_Consumed_Record_Found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Service_Appointment__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Service_Appointment__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Product_Consumed_Number__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Product_Consumed_Number__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Product_Consumed_Number__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ProductConsumed</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Open_Parts_On_Order_Product_Requests_on_Case</name>
        <label>Get Open &quot;Parts On Order&quot; Product Requests on Case</label>
        <locationX>182</locationX>
        <locationY>408</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Count_of_Open_Non_Received_Product_Requests_on_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CaseId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Case.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Received</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Parts on Order</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ProductRequest</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Populate_Checkbox_on_Case</name>
        <label>Populate Checkbox on Case</label>
        <locationX>50</locationX>
        <locationY>768</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Case.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Parts_On_Order_Chatter_Sent__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Product_Consumed_Record</name>
        <label>Update Product Consumed Record</label>
        <locationX>842</locationX>
        <locationY>768</locationY>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>650</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Product_Request_Type</targetReference>
        </connector>
        <object>ProductRequest</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <scheduledPaths>
            <name>X1_Minute_Post_Create</name>
            <connector>
                <targetReference>Does_Product_Request_have_a_Type_of_Parts_Consumed_Backfill</targetReference>
            </connector>
            <label>1 Minute Post Create</label>
            <offsetNumber>1</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <recordField>CreatedDate</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>Chatter_to_RSM</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;{{!$Record.Account.Relationship_Manager__r.Id}}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;TEST TEST TEST TEST&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>varOpenProductRequests</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
</Flow>
